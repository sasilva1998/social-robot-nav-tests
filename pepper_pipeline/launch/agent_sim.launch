<?xml version="1.0"?>
<launch>
    <arg name="kbd_teleop" default="false" />
    <arg name="rqt_teleop" default="false" />
    <arg name="visualize" default="true" />
    <arg name="with_robot" default="true" />

    <arg name="simulation_factor" default="1.0" />
    <!-- Speed up -->
    <arg name="update_rate" default="25.0" />
    <!-- Hz -->

    <!-- additional parameters configured -->
    <arg name="force_obstacle" default="10.0" />
    <arg name="sigma_obstacle" default="0.2" />
    <arg name="force_social" default="20" />
    <arg name="force_group_gaze" default="3.0" />
    <arg name="force_group_coherence" default="2.0" />
    <arg name="force_group_repulsion" default="1.0" />
    <arg name="force_random" default="0.1" />
    <arg name="force_wall" default="2.0" />

    <arg name="scenario_file" default="ipa_apartment.xml" />
    <arg name="detect_frozen_agents" default="true" />
    <arg name="walls_scale" default="0.1" />

    <!--additional parameters for pedsim and robot simulation-->
    <arg name="frame_id" default="world" />
    <arg name="robot_base_frame_id" default="base_footprint" />
    <arg name="obstacle_offset_x" default="-19.45" />
    <arg name="obstacle_offset_y" default="-19.4" />
    <arg name="world_frame" default="world" />
    <arg name="robot_frame" default="base_footprint" />
    <arg name="publish_tf" default="false" />

    <arg name="pose_initial_x" default="0.0" />
    <arg name="pose_initial_y" default="0.0" />
    <arg name="pose_initial_theta" default="0.0" />

    <!-- Simulator -->
    <include file="$(find pedsim_simulator)/launch/simulator.launch">
        <arg name="kbd_teleop" value="$(arg kbd_teleop)" />
        <arg name="rqt_teleop" value="$(arg rqt_teleop)" />
        <arg name="scene_file" value="$(find pepper_pipeline)/scenarios/$(arg scenario_file)" />
        <arg name="with_robot" value="$(arg with_robot)" />
        <arg name="simulation_factor" value="$(arg simulation_factor)" />
        <arg name="update_rate" value="$(arg update_rate)" />
        <arg name="default_queue_size" value="10" />
        <arg name="max_robot_speed" value="1.5" />
        <arg name="robot_mode" value="0" />
        <arg name="enable_groups" value="true" />
        <arg name="pose_initial_x" value="0.0" />
        <arg name="pose_initial_y" value="0.0" />
        <arg name="pose_initial_theta" value="0" />
        <arg name="detect_frozen_agents" value="$(arg detect_frozen_agents)" />
        <!-- extra parameters -->
        <arg name="force_obstacle" value="$(arg force_obstacle)" />
        <arg name="sigma_obstacle" value="$(arg sigma_obstacle)" />
        <arg name="force_social" value="$(arg force_social)" />
        <arg name="force_group_gaze" value="$(arg force_group_gaze)" />
        <arg name="force_group_coherence" value="$(arg force_group_coherence)" />
        <arg name="force_group_repulsion" value="$(arg force_group_repulsion)" />
        <arg name="force_random" value="$(arg force_random)" />
        <arg name="force_wall" value="$(arg force_wall)" />

        <arg name="frame_id" value="$(arg frame_id)" />
        <arg name="robot_base_frame_id" value="$(arg robot_base_frame_id)" />
        <arg name="obstacle_offset_x" value="$(arg obstacle_offset_x)" />
        <arg name="obstacle_offset_y" value="$(arg obstacle_offset_y)" />
        <arg name="world_frame" value="$(arg world_frame)" />
        <arg name="robot_frame" value="$(arg robot_frame)" />
        <arg name="publish_tf" value="$(arg publish_tf)" />
    </include>

    <!-- Visualizer -->
    <!-- <include file="$(find pedsim_simulator)/launch/visualizer.launch">
        <arg name="walls_scale" value="$(arg walls_scale)" />
    </include> -->
    <arg name="hz" default="25.0" />

    <node name="pedsim_visualizer" type="pedsim_visualizer_node" pkg="pedsim_visualizer" output="screen">
        <param name="hz" value="$(arg hz)" type="double" />
        <param name="walls_marker_scale" value="$(arg walls_scale)" type="double" />
        <remap from="/pedsim_simulator/simulated_agents" to="/pedsim_simulator/simulated_agents_overwritten" />
    </node>

    <!-- to overwrite agents into pedsim -->
    <node pkg="sfm_diff_drive" type="social_agents_overwriter.py" name="social_agents_overwriter" />

    <!-- <include file="$(find pepper_pipeline)/launch/sfm_drive.launch" /> -->

    <!-- this node spawn pedsim actors to gazebo once, then the plugin updates their pose -->
    <!-- <node pkg="pedsim_gazebo_plugin" type="spawn_pedsim_agents.py" name="spawn_pedsim_agents" output="screen" /> -->

    <!-- robot driving controller -->
    <!-- <node name="driving_controller" type="simulate_diff_drive_robot" pkg="pedsim_simulator" output="screen">
        <param name="pose_initial_x" value="$(arg pose_initial_x)" type="double" />
        <param name="pose_initial_y" value="$(arg pose_initial_y)" type="double" />
        <param name="pose_initial_theta" value="$(arg pose_initial_theta)" type="double" />
        <param name="world_frame" value="$(arg world_frame)" type="string" />
        <param name="robot_frame" value="$(arg robot_frame)" type="string" />
        <param name="publish_tf" value="$(arg publish_tf)" type="bool" />
    </node> -->
</launch>